[{"/Users/jaeyoungkim/GitHub/bakkatown/src/index.js":"1","/Users/jaeyoungkim/GitHub/bakkatown/src/App.js":"2","/Users/jaeyoungkim/GitHub/bakkatown/src/pages/index.js":"3","/Users/jaeyoungkim/GitHub/bakkatown/src/components/ScrollToTop.js":"4","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Navbar/index.js":"5","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Sidebar/index.js":"6","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Footer/index.js":"7","/Users/jaeyoungkim/GitHub/bakkatown/src/components/HeroSection/index.js":"8","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Rooms/index.js":"9","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Navbar/NavbarElements.js":"10","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Footer/FooterElements.js":"11","/Users/jaeyoungkim/GitHub/bakkatown/src/components/HeroSection/HeroElements.js":"12","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Sidebar/SidebarElements.js":"13","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Rooms/RoomsElements.js":"14","/Users/jaeyoungkim/GitHub/bakkatown/src/components/sections/sectionElements.js":"15","/Users/jaeyoungkim/GitHub/bakkatown/src/components/sections/indexAvailability.js":"16","/Users/jaeyoungkim/GitHub/bakkatown/src/components/sections/indexRates.js":"17","/Users/jaeyoungkim/GitHub/bakkatown/src/components/sections/indexContact.js":"18","/Users/jaeyoungkim/GitHub/bakkatown/src/components/sections/indexMap.js":"19","/Users/jaeyoungkim/GitHub/bakkatown/src/pages/notFound.js":"20","/Users/jaeyoungkim/GitHub/bakkatown/src/components/NotFound/index.js":"21","/Users/jaeyoungkim/GitHub/bakkatown/src/components/NotFound/NotFoundElements.js":"22","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Gallery/index.js":"23","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Gallery/GalleryElements.js":"24","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Overview/index.js":"25","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Overview/OverviewElements.js":"26","/Users/jaeyoungkim/GitHub/bakkatown/src/pages/book.js":"27","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Book/index.js":"28","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Book/BookElements.js":"29","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Reviews/index.js":"30","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Reviews/reviewsElements.js":"31","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Book/Availability.js":"32","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Book/Rental.js":"33","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Book/GuestDetails.js":"34","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Book/Summary.js":"35","/Users/jaeyoungkim/GitHub/bakkatown/src/util.js":"36","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Payment/index.js":"37","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Payment/PaymentElements.js":"38","/Users/jaeyoungkim/GitHub/bakkatown/src/pages/login.js":"39","/Users/jaeyoungkim/GitHub/bakkatown/src/pages/signup.js":"40","/Users/jaeyoungkim/GitHub/bakkatown/src/pages/forgot.js":"41","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Account/Confirm/index.js":"42","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Account/Account/index.js":"43","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Account/Signup/index.js":"44","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Account/Forgot/index.js":"45","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Account/Login/index.js":"46","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Account/ApiService.js":"47","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Account/AccountElements.js":"48","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Account/Account/Reservations.js":"49","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Account/Account/AccountDetailsClass.js":"50","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Account/SigninElements.js":"51","/Users/jaeyoungkim/GitHub/bakkatown/src/pagesm/login.js":"52","/Users/jaeyoungkim/GitHub/bakkatown/src/pagesm/signup.js":"53","/Users/jaeyoungkim/GitHub/bakkatown/src/pagesm/forgot.js":"54","/Users/jaeyoungkim/GitHub/bakkatown/src/components/AccountMatt/Account/index.js":"55","/Users/jaeyoungkim/GitHub/bakkatown/src/components/AccountMatt/Confirm/index.js":"56","/Users/jaeyoungkim/GitHub/bakkatown/src/components/AccountMatt/AccountElements.js":"57","/Users/jaeyoungkim/GitHub/bakkatown/src/components/AccountMatt/Account/Reservations.js":"58","/Users/jaeyoungkim/GitHub/bakkatown/src/components/AccountMatt/Account/AccountDetailsClass.js":"59","/Users/jaeyoungkim/GitHub/bakkatown/src/components/AccountMatt/ApiService.js":"60","/Users/jaeyoungkim/GitHub/bakkatown/src/components/AccountMatt/Login/index.js":"61","/Users/jaeyoungkim/GitHub/bakkatown/src/components/AccountMatt/Forgot/index.js":"62","/Users/jaeyoungkim/GitHub/bakkatown/src/components/AccountMatt/Signup/index.js":"63"},{"size":197,"mtime":1615158950000,"results":"64","hashOfConfig":"65"},{"size":1611,"mtime":1616831439786,"results":"66","hashOfConfig":"65"},{"size":1420,"mtime":1615158950000,"results":"67","hashOfConfig":"65"},{"size":246,"mtime":1616814001166,"results":"68","hashOfConfig":"65"},{"size":2472,"mtime":1616835724375,"results":"69","hashOfConfig":"65"},{"size":1048,"mtime":1616836139564,"results":"70","hashOfConfig":"65"},{"size":3983,"mtime":1616814001156,"results":"71","hashOfConfig":"65"},{"size":1973,"mtime":1616814001158,"results":"72","hashOfConfig":"65"},{"size":2697,"mtime":1616814001165,"results":"73","hashOfConfig":"65"},{"size":2498,"mtime":1616835887831,"results":"74","hashOfConfig":"65"},{"size":2151,"mtime":1616814001155,"results":"75","hashOfConfig":"65"},{"size":2230,"mtime":1616814001158,"results":"76","hashOfConfig":"65"},{"size":1869,"mtime":1616836297860,"results":"77","hashOfConfig":"65"},{"size":3127,"mtime":1616814001164,"results":"78","hashOfConfig":"65"},{"size":4000,"mtime":1616814001169,"results":"79","hashOfConfig":"65"},{"size":1252,"mtime":1616814001167,"results":"80","hashOfConfig":"65"},{"size":2169,"mtime":1616814001169,"results":"81","hashOfConfig":"65"},{"size":1547,"mtime":1616814001168,"results":"82","hashOfConfig":"65"},{"size":1786,"mtime":1616814001168,"results":"83","hashOfConfig":"65"},{"size":262,"mtime":1615158950000,"results":"84","hashOfConfig":"65"},{"size":316,"mtime":1616814001160,"results":"85","hashOfConfig":"65"},{"size":1161,"mtime":1616814001160,"results":"86","hashOfConfig":"65"},{"size":1061,"mtime":1616814001157,"results":"87","hashOfConfig":"65"},{"size":1852,"mtime":1616814001156,"results":"88","hashOfConfig":"65"},{"size":2167,"mtime":1616814001161,"results":"89","hashOfConfig":"65"},{"size":4306,"mtime":1616814001161,"results":"90","hashOfConfig":"65"},{"size":246,"mtime":1615158950000,"results":"91","hashOfConfig":"65"},{"size":9684,"mtime":1616814001155,"results":"92","hashOfConfig":"65"},{"size":6068,"mtime":1616814001153,"results":"93","hashOfConfig":"65"},{"size":769,"mtime":1616814001163,"results":"94","hashOfConfig":"65"},{"size":4060,"mtime":1616814001164,"results":"95","hashOfConfig":"65"},{"size":3261,"mtime":1616814001153,"results":"96","hashOfConfig":"65"},{"size":3539,"mtime":1616814001154,"results":"97","hashOfConfig":"65"},{"size":2927,"mtime":1616814001153,"results":"98","hashOfConfig":"65"},{"size":3985,"mtime":1616814001154,"results":"99","hashOfConfig":"65"},{"size":115,"mtime":1616823081999,"results":"100","hashOfConfig":"65"},{"size":896,"mtime":1613731983220,"results":"101","hashOfConfig":"65"},{"size":1956,"mtime":1613731933663,"results":"102","hashOfConfig":"65"},{"size":255,"mtime":1616831577899,"results":"103","hashOfConfig":"65"},{"size":284,"mtime":1615158950000,"results":"104","hashOfConfig":"65"},{"size":284,"mtime":1615158950000,"results":"105","hashOfConfig":"65"},{"size":5185,"mtime":1615158950000,"results":"106","hashOfConfig":"65"},{"size":10021,"mtime":1615158950000,"results":"107","hashOfConfig":"65"},{"size":4712,"mtime":1616833476549,"results":"108","hashOfConfig":"65"},{"size":2389,"mtime":1616834678727,"results":"109","hashOfConfig":"65"},{"size":2511,"mtime":1616836646577,"results":"110","hashOfConfig":"65"},{"size":2803,"mtime":1615158950000,"results":"111","hashOfConfig":"65"},{"size":2946,"mtime":1615158950000,"results":"112","hashOfConfig":"65"},{"size":6744,"mtime":1615158950000,"results":"113","hashOfConfig":"65"},{"size":6374,"mtime":1615158950000,"results":"114","hashOfConfig":"65"},{"size":2005,"mtime":1616830334006,"results":"115","hashOfConfig":"65"},{"size":261,"mtime":1616831627000,"results":"116","hashOfConfig":"65"},{"size":264,"mtime":1616831738269,"results":"117","hashOfConfig":"65"},{"size":264,"mtime":1616831671655,"results":"118","hashOfConfig":"65"},{"size":10021,"mtime":1616830924001,"results":"119","hashOfConfig":"65"},{"size":5185,"mtime":1616830924002,"results":"120","hashOfConfig":"65"},{"size":2946,"mtime":1616830924001,"results":"121","hashOfConfig":"65"},{"size":6744,"mtime":1616830924000,"results":"122","hashOfConfig":"65"},{"size":6374,"mtime":1616830924000,"results":"123","hashOfConfig":"65"},{"size":2803,"mtime":1616830924002,"results":"124","hashOfConfig":"65"},{"size":4352,"mtime":1616830924003,"results":"125","hashOfConfig":"65"},{"size":3150,"mtime":1616830924003,"results":"126","hashOfConfig":"65"},{"size":5096,"mtime":1616830924005,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"glxrnj",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"130"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"130"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"130"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"130"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"130"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"130"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"130"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"130"},"/Users/jaeyoungkim/GitHub/bakkatown/src/index.js",[],["261","262"],"/Users/jaeyoungkim/GitHub/bakkatown/src/App.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/pages/index.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/ScrollToTop.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Navbar/index.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Sidebar/index.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Footer/index.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/HeroSection/index.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Rooms/index.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Navbar/NavbarElements.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Footer/FooterElements.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/HeroSection/HeroElements.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Sidebar/SidebarElements.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Rooms/RoomsElements.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/sections/sectionElements.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/sections/indexAvailability.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/sections/indexRates.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/sections/indexContact.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/sections/indexMap.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/pages/notFound.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/NotFound/index.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/NotFound/NotFoundElements.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Gallery/index.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Gallery/GalleryElements.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Overview/index.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Overview/OverviewElements.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/pages/book.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Book/index.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Book/BookElements.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Reviews/index.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Reviews/reviewsElements.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Book/Availability.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Book/Rental.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Book/GuestDetails.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Book/Summary.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/util.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Payment/index.js",[],["263","264"],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Payment/PaymentElements.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/pages/login.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/pages/signup.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/pages/forgot.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Account/Confirm/index.js",["265","266","267","268","269","270"],"import React, {useState} from 'react';\nimport ApiService from \"../ApiService\";\nimport {toast} from \"react-toastify\";\nimport './test.css'\n\ntoast.configure();\n\nconst Confirm = () => {\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const token = urlParams.get('token');\n    const authToken = urlParams.get('auth_token');\n\n    if (token == null && authToken == null) {\n        document.location.href = 'http://localhost:3000/'\n    }\n\n    const blankConfirm = {\n        password: '',\n    }\n\n    const [newConfirm, setConfirm] = useState(blankConfirm);\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        console.log(event);\n\n        let sendConfirm = {\n            password: newConfirm.password,\n        }\n\n        let response = ApiService.confirmToken(sendConfirm.password, token, authToken).then(response => {\n            if (response.status === 200) {\n                localStorage.setItem('token', authToken);\n                toast('Success! Password Set', {type: 'success'});\n                setTimeout(function () {\n                    document.location.href = 'http://localhost:3000/account';\n                }, 2500);\n                // window.axios.defaults.headers.common['Authorization'] = token;\n            } else {\n                toast('Whoops! Something went wrong', {type: 'error'});\n            }\n        }).catch(e => {\n            console.log(\"error: \", e);\n            toast('Whoops! Something went wrong', {type: 'error'});\n            setTimeout(function () {\n                document.location.href = 'http://localhost:3000/';\n            }, 2500);\n        });\n    }\n    // let handleSubmit = (event) => {\n    //     event.preventDefault();\n    //     console.log(event);\n    //\n    //     let sendConfirm = {\n    //         password: newConfirm.password,\n    //         token: token,\n    //         authToken: authToken\n    //     }\n    //\n    //     let response = ApiService.confirmToken(sendConfirm.password, sendConfirm.token, sendConfirm.authToken).then(response => {\n    //         if (response.status === 200) {\n    //             localStorage.setItem('token', authToken);\n    //             window.axios.defaults.headers.common['Authorization'] = response.data.token;\n    //         } else {\n    //             console.log(\"bad signup\");\n    //         }\n    //     }).catch(e => {\n    //         console.log(\"error: \", e);\n    //     });\n    //\n    //     console.log(response);\n    //\n    //     if (response.status === 200) {\n    //         toast('Success! Password Set', {type: 'success'});\n    //         setTimeout(function () {\n    //             document.location.href = 'http://localhost:3000/';\n    //         }, 2000);\n    //     }\n    // }\n\n    const handleChange = (event) => {\n        const {name, value} = event.target;\n        setConfirm((prevState => ({\n            ...prevState,\n            [name]: value,\n        })));\n    };\n\n    return (\n        <>\n            <div className=\"fixer\">\n                <div className=\"body\">\n                    <section id=\"Password-Form\" className=\"subscribe-form\">\n                        <div className=\"centered-container w-container\">\n                            <h2 className=\"heading\">Add Your Password to Secure your Account</h2>\n                            <p className=\"paragraph\">This password will be used to change any details in your account\n                                and\n                                reservation in the future. You will always have access through your email to your\n                                Reservations\n                                regardless.</p>\n                            <div className=\"w-form\">\n                                <form id=\"email-form\" name=\"email-form\" data-name=\"Email Form\" onSubmit={handleSubmit}\n                                      className=\"subscribe-form-flex\">\n                                    <div className=\"subscribe-form-input-wrapper\">\n                                        <input type=\"password\"\n                                               className=\"subscribe-form-input w-input\"\n                                               autoFocus=\"true\" maxLength=\"256\"\n                                               name=\"Password-Input\"\n                                               data-name=\"Password Input\"\n                                               placeholder=\"Your Password Goes Here\"\n                                               id=\"Password-Input\" required onChange={handleChange}/>\n                                        <input type=\"submit\" data-wait=\"Please wait...\" onSubmit={handleSubmit}\n                                               className=\"submit-button w-button\"/></div>\n                                </form>\n                            </div>\n                        </div>\n                    </section>\n                </div>\n            </div>\n        </>\n    )\n};\n\nexport default Confirm;\n\n{/*<form onSubmit={handleSubmit}>*/\n}\n{/*    <h1>Set Password</h1>*/\n}\n{/*    <input type=\"password\" name=\"password\" onChange={handleChange}/>*/\n}\n{/*    <button type=\"submit\" onSubmit={handleSubmit}> Submit</button>*/\n}\n{/*</form>*/\n}","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Account/Account/index.js",["271","272","273"],"import React, {useState} from 'react';\nimport {\n    Container, Icon,\n} from '../AccountElements';\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Reservations from './Reservations'\nimport {Grid} from \"@material-ui/core\";\nimport UserList from \"./userList.json\";\nimport AccountDetailsClass from \"./AccountDetailsClass\";\nimport ApiService from \"../ApiService\";\nimport * as PropTypes from \"prop-types\";\nimport './fornow.css'\nimport axios from \"axios\";\n\n\n// f5c3e773-1ed3-4e3c-b73f-7fe230536f2f\n\n// http://localhost:3000/account?token=69c398ef-7f31-44e5-91b0-a1be359ac654\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        padding: 10,\n    },\n    accSize: {\n        width: '75%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    icon: {\n        alignContent: 'center',\n        margin: 'auto 5em',\n        textAlign: 'center'\n    },\n    details: {\n        justifyContent: 'center',\n    },\n    column: {\n        flexBasis: '33.33%',\n    },\n}));\n\n\nclass MessageSection extends React.Component {\n    componentDidMount() {\n        const apiUrl = 'http://localhost:8080/api/v1/message';\n        fetch(apiUrl).then((response) => response.json())\n            .then((data) => console.log(\"testing data:\", data))\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        let message = document.getElementById('messageBox').innerText;\n        // check for bad input\n        axios.post('http://localhost:8080/api/v1/message', message).then(response => {\n            if (response.status === 200) {\n                console.log(message);\n            }\n        })\n    }\n\n    //then make that into a message\n\n    render() {\n        return <>\n            <div className=\"extra w-col w-col-3\">\n                <div id=\"Message-Block\" className=\"div-block-2\">\n                    <div className=\"<Messages\">\n                    <ul id=\"chat\">\n                        <li className=\"you\">\n                            <div className=\"message-status\">\n                                <h2>Vincent</h2>\n                                <h3>10:12AM, Today</h3>\n                            </div>\n                            <div className=\"message\">\n                                This is the first message\n                            </div>\n                        </li>\n                        <li className=\"me\">\n                            <div className=\"message-status\">\n                                <h3>10:12AM, Today</h3>\n                                <h2>Vincent</h2>\n                            </div>\n                            <div className=\"message\">\n                                Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget\n                                dolor.\n                            </div>\n                        </li>\n                    </ul>\n                    </div>\n                </div>\n                <div className=\"w-form\">\n                    <textarea placeholder=\"Type your message\" className=\"text-field w-input\" id=\"messageBox\"> </textarea>\n                    <input type=\"submit\" data-wait=\"Please wait...\" onSubmit={this.handleSubmit}\n                           className=\"submit-button-2 w-button\"/>\n                </div>\n            </div>\n        </>\n    }\n}\n\nMessageSection.propTypes =\n    {\n        account: PropTypes.shape({\n            password: PropTypes.string,\n            address: PropTypes.string,\n            last_name: PropTypes.string,\n            phone_number: PropTypes.string,\n            isLoaded: PropTypes.bool,\n            first_name: PropTypes.string,\n            email: PropTypes.string,\n            enabled: PropTypes.bool\n        })\n    }\n;\nconst Account = () => {\n\n        // clears auth_token when leaves page\n        window.addEventListener(\"beforeunload\", function (e) {\n            localStorage.clear();\n        });\n\n        let account = {\n            isLoaded: false,\n            first_name: \"\",\n            last_name: \"\",\n            email: \"\",\n            password: \"\",\n            phone_number: \"\",\n            address: \"\",\n            enabled: false\n        }\n\n        function checkAuth() {\n            const auth_token = localStorage.getItem('token');\n            if (auth_token === null) {\n                document.location.href = 'http://localhost:3000/';\n            } else {\n                // let res = await ApiService.accountDetails(auth_token).then(response => {\n                ApiService.accountDetails(\"jones.matthew@edu.sait.ca\").then((response) => {\n                    account.first_name = response.data.first_name;\n                    account.last_name = response.data.last_name;\n                    account.email = response.data.email;\n                    account.password = response.data.password;\n                    account.phone_number = response.data.phone_number;\n                    account.address = response.data.address;\n                    account.enabled = response.data.enabled;\n                    account.isLoaded = true;\n                    console.log(account)\n\n\n                }).catch(e => {\n                    console.log(e);\n                });\n            }\n        }\n\n\n        const [newAccount, setAccount] = useState(account);\n\n\n        checkAuth();\n        // console.log(account)\n\n        const classes = useStyles();\n        // let user = User.loadUser();\n        // let user = UserList.account;\n\n        return (\n            <>\n                <Container className={classes.root}>\n                    <Icon className={classes.icon} to='/'>Bakkatown Belize</Icon>\n                    <Grid\n                        container\n                        spacing={1}\n                        direction=\"column\"\n                        alignItems=\"center\"\n                        justify=\"center\"\n                    >\n                        <Accordion className={classes.accSize} defaultExpanded>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon/>}\n                                aria-controls='panel1c-content'\n                                id='panel1c-header'>\n                                <div className={classes.column}>\n                                    <Typography className={classes.heading}>\n                                        Account\n                                    </Typography>\n                                </div>\n                                <div className={classes.column}>\n                                    <Typography className={classes.secondaryHeading}>\n                                        Account Settings\n                                    </Typography>\n                                </div>\n                            </AccordionSummary>\n                            <AccordionDetails className={classes.details}>\n                                <AccountDetailsClass account={account}/>\n                            </AccordionDetails>\n                            <Divider/>\n                        </Accordion>\n                        <Accordion className={classes.accSize}>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon/>}\n                                aria-controls='panel1c-content'\n                                id='panel1c-header'>\n                                <div className={classes.column}>\n                                    <Typography className={classes.heading}>\n                                        Reservations\n                                    </Typography>\n                                </div>\n                                <div className={classes.column}>\n                                    <Typography className={classes.secondaryHeading}>\n                                        See your Reservations\n                                    </Typography>\n                                </div>\n                            </AccordionSummary>\n                            <AccordionDetails className={classes.details}>\n                                <Reservations account={account}/>\n                            </AccordionDetails>\n                            <Divider/>\n                        </Accordion>\n                        <Accordion className={classes.accSize}>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon/>}\n                                aria-controls='panel1c-content'\n                                id='panel1c-header'>\n                                <div className={classes.column}>\n                                    <Typography className={classes.heading}>\n                                        Messages\n                                    </Typography>\n                                </div>\n                                <div className={classes.column}>\n                                    <Typography className={classes.secondaryHeading}>\n                                        Message us\n                                    </Typography>\n                                </div>\n                            </AccordionSummary>\n                            <AccordionDetails className={classes.details}>\n                                <MessageSection account={account}/>\n                            </AccordionDetails>\n                            <Divider/>\n                        </Accordion>\n                    </Grid>\n                </Container>\n            </>\n        );\n    }\n;\n\nexport default Account;\n\n\n","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Account/Signup/index.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Account/Forgot/index.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Account/Login/index.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Account/ApiService.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Account/AccountElements.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Account/Account/Reservations.js",["274"],"import React from 'react';\nimport {ButtonBase, Grid, makeStyles, Paper} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {A} from \"../AccountElements\";\nimport ReservationList from \"./reservationList.json\" //temp\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        margin: 'auto',\n        maxWidth: 500,\n    },\n    image: {\n        width: 128,\n        height: 128,\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    clickable: {\n        marginBottom: 10\n    }\n}));\n\n\nconst Reservations = (account) => {\n    const classes = useStyles();\n    // const reservations = user.reservations; // when we make calls\n    return (\n        <>\n            {/*{account.reservations.map((reservation) => (*/}\n            {ReservationList.reservation.map((reservation) => (\n                <div key={reservation.id} className={classes.root}>\n                    <Paper className={classes.paper}>\n                        <Grid container spacing={2}>\n                            <Grid item>\n                                <ButtonBase className={classes.image}>\n                                    <img className={classes.img} alt={reservation.name}\n                                         src={require(`../../../images/rooms/${reservation.image}.jpg`)?.default}/>\n                                </ButtonBase>\n                            </Grid>\n                            <Grid item xs={12} sm container>\n                                <Grid item xs container direction=\"column\" spacing={2}>\n                                    <Grid item xs>\n                                        <Typography gutterBottom variant=\"subtitle1\">\n                                            {reservation.name}\n                                        </Typography>\n                                        <Typography variant=\"body2\" gutterBottom>\n                                            {reservation.startDate} - {reservation.endDate}\n                                        </Typography>\n                                        <Typography variant=\"body2\" color=\"textSecondary\">\n                                            ID: {reservation.id}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Grid item>\n                                    <Typography className={classes.clickable}\n                                                variant=\"subtitle1\">${reservation.total}</Typography>\n                                    <Grid item className={classes.clickable}>\n                                        <Typography variant=\"link\" style={{cursor: 'pointer'}}>\n                                            <a href='/'>Request Change</a>\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item className={classes.clickable}>\n                                        <Typography variant=\"link\" style={{cursor: 'pointer'}}>\n                                            <a href='/'>Message</a>\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item className={classes.clickable}>\n                                        <Typography variant=\"link\" style={{cursor: 'pointer'}}>\n                                            <a href='/'>Leave Review</a>\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item className={classes.clickable}>\n                                        <Typography variant=\"link\" style={{cursor: 'pointer'}}>\n                                            <a href='/'>Cancel</a>\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </div>\n            ))}\n        </>\n    );\n};\n\n\nexport default Reservations;\n\n\n/* template\n<div className={classes.root}>\n                <Paper className={classes.paper}>\n                    <Grid container spacing={2}>\n                        <Grid item>\n                            <ButtonBase className={classes.image}>\n                                <img className={classes.img} alt=\"complex\" src={} />\n                            </ButtonBase>\n                        </Grid>\n                        <Grid item xs={12} sm container>\n                            <Grid item xs container direction=\"column\" spacing={2}>\n                                <Grid item xs>\n                                    <Typography gutterBottom variant=\"subtitle1\">\n                                        Default Template\n                                    </Typography>\n                                    <Typography variant=\"body2\" gutterBottom>\n                                        April 10 - April 15\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\">\n                                        ID: 1030114\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid item >\n                                <Typography className={classes.clickable} variant=\"subtitle1\">$100000.00</Typography>\n                                <Grid item className={classes.clickable}>\n                                    <Typography variant=\"link\" style={{ cursor: 'pointer' }}>\n                                        Change Date\n                                    </Typography>\n                                </Grid>\n                                <Grid item className={classes.clickable}>\n                                    <Typography variant=\"link\" style={{ cursor: 'pointer' }}>\n                                        Message\n                                    </Typography>\n                                </Grid>\n                                <Grid item className={classes.clickable}>\n                                    <Typography variant=\"link\" style={{ cursor: 'pointer' }}>\n                                        Cancel\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </div>\n\n */","/Users/jaeyoungkim/GitHub/bakkatown/src/components/Account/Account/AccountDetailsClass.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/Account/SigninElements.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/pagesm/login.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/pagesm/signup.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/pagesm/forgot.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/AccountMatt/Account/index.js",["275","276","277"],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/AccountMatt/Confirm/index.js",["278","279","280","281","282","283"],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/AccountMatt/AccountElements.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/AccountMatt/Account/Reservations.js",["284"],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/AccountMatt/Account/AccountDetailsClass.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/AccountMatt/ApiService.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/AccountMatt/Login/index.js",["285","286"],"import React, { useState } from 'react';\nimport {\n  Container,\n  Icon,\n  FormH1,\n  FormLabel,\n  FormInput,\n  FormButton,\n  Text,\n  A,\n} from '../AccountElements';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\n\nconst Login = () => {\n  const blankSignIn = {\n    email: '',\n    password: '',\n  };\n\n  const [signIn, setSignup] = useState(blankSignIn);\n\n  async function loginRequest(data) {\n    try {\n      console.log(data);\n      return await axios.post('http://localhost:8080/api/v1/login', {\n        email: data.email,\n        password: data.password,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  let handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(event);\n\n    const newSignIn = {\n      email: signIn.email,\n      password: signIn.password,\n    };\n\n    loginRequest({ newSignIn })\n      .then((response) => {\n        console.log(response.status);\n        console.log(response.data);\n\n        if (response.status === 200) {\n          localStorage.setItem('token', response.data.token);\n          localStorage.setItem('email', response.data.email);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  //     ApiService.awaitLoginRequest({newSignIn}).then(response => {\n  //         console.log(response.status)\n  //         console.log(response.data)\n  //\n  //         if (response.status === 200) {\n  //             localStorage.setItem('token', response.data.token);\n  //             localStorage.setItem('email', response.data.email);\n  //             // todo hash these later example below\n  //             window.axios.defaults.headers.common['Authorization'] = response.data.token;\n  //         }\n  //     }).then(response => {\n  //         ApiService.sendLoginRequest(newSignIn).then(response => {\n  //             document.location.href = 'http://localhost:3000/account'\n  //         });\n  //     }).catch(error => {\n  //         // document.location.href = 'http://localhost:3000/account' // testing\n  //         console.log(error.message)\n  //     });\n  // }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setSignup((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      position: 'relative',\n      width: 'auto',\n      height: 'auto',\n    },\n    root: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      flexGrow: 1,\n      backgroundColor: 'black',\n      width: '50%',\n      padding: 50,\n      alignContent: 'center',\n      textAlign: 'center',\n      boxSizing: 'content-box',\n      borderRadius: '10%',\n    },\n    icon: {\n      position: 'absolute',\n      top: '3%',\n      left: '15%',\n      transform: 'translate(-50%, -50%)',\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n    },\n    form: {\n      maxWidth: 400,\n      height: 'auto',\n      width: '100%',\n      display: 'grid',\n      margin: '0 auto',\n      padding: '80px 32px',\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Container className={classes.container}>\n        <Icon className={classes.icon}>Bakkatown Belize</Icon>\n        <div className={classes.root}>\n          <form onSubmit={handleSubmit} className={classes.form}>\n            <FormH1>Sign in to your account</FormH1>\n            <FormLabel htmlFor='email'>Email</FormLabel>\n            <FormInput\n              name='email'\n              id='email'\n              onChange={handleChange}\n              required\n            />\n\n            <FormLabel htmlFor='password'>Password</FormLabel>\n            <FormInput\n              name='password'\n              type='password'\n              id='password'\n              onChange={handleChange}\n              required\n            />\n\n            <FormButton onSubmit={handleSubmit}>Continue</FormButton>\n            <Text>\n              Don't have an account? Make one <A to='/signup'>here</A>\n            </Text>\n            <Text>\n              <A to='/forgot'>Forgot password</A>\n            </Text>\n          </form>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default Login;\n","/Users/jaeyoungkim/GitHub/bakkatown/src/components/AccountMatt/Forgot/index.js",[],"/Users/jaeyoungkim/GitHub/bakkatown/src/components/AccountMatt/Signup/index.js",["287"],"import React, {useState} from 'react';\nimport {\n    A, Container, FormButton, FormH1, FormInput, FormLabel, Icon, Text,\n} from '../AccountElements';\nimport ApiService from \"../ApiService\";\nimport {countries} from \"country-data\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\n\nconst SignUp = () => {\n\n    const blankSignup = {\n        firstname: '',\n        lastname: '',\n        email: '',\n        password: '',\n        // country: '',\n    }\n\n    const [signup, setSignup] = useState(blankSignup);\n\n    let handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(event);\n\n        let newSignup = {\n            firstname: signup.firstname,\n            lastname: signup.lastname,\n            email: signup.email,\n            password: signup.password,\n            // country: signup.country,\n        };\n\n        console.log(\"before sent\")\n        console.log(newSignup)\n\n        ApiService.registerUser(newSignup.firstname, newSignup.lastname, newSignup.email, newSignup.password).then(response => {\n            console.log(response.status)\n            console.log(response.data.token)\n            // nope need to hit email first\n            if (response.status === 200) {\n                localStorage.setItem('token', response.data.token);\n                localStorage.setItem('email', newSignup.email);\n                // todo hash these later example below\n                window.axios.defaults.headers.common['Authorization'] = response.data.token;\n                document.location.href = 'http://localhost:3000/account'\n            } else {\n                console.log(\"bad signup\");\n                document.location.href = 'http://localhost:3000/signup'\n            }\n        }).catch(error => {\n            console.log(\"error : \", error)\n        });\n    }\n\n    const handleChange = (event) => {\n        const {name, value} = event.target;\n        setSignup((prevState => ({\n            ...prevState,\n            [name]: value,\n        })));\n    };\n\n    const useStyles = makeStyles((theme) => ({\n        container: {\n            position: \"relative\",\n            width: \"auto\",\n            height: \"auto\"\n        },\n        root: {\n            position: \"absolute\",\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            flexGrow: 1,\n            backgroundColor: \"black\",\n            width: '50%',\n            padding: 50,\n            alignContent: \"center\",\n            textAlign: \"center\",\n            boxSizing: 'content-box',\n            borderRadius: '10%',\n        },\n        icon: {\n            position: \"absolute\",\n            top: '3%',\n            left: '15%',\n            transform: 'translate(-50%, -50%)',\n        },\n        paper: {\n            padding: theme.spacing(2),\n            textAlign: 'center',\n        },\n        form: {\n            maxWidth: 400,\n            height: 'auto',\n            width: '100%',\n            display:\"grid\",\n            margin: '0 auto',\n            padding: '80px 32px',\n\n        },\n    }));\n\n\n    const classes = useStyles();\n    return (\n\n        <>\n            <Container className={classes.container}>\n                <Icon className={classes.icon}>Bakkatown Belize</Icon>\n                <div className={classes.root}>\n                    <form onSubmit={handleSubmit} className={classes.form}>\n                            <FormH1>Sign up for a new account</FormH1>\n\n                            <FormLabel htmlFor='firstname'>First Name</FormLabel>\n                            <FormInput name='firstname' id='firstname' onChange={handleChange} required/>\n\n                            <FormLabel htmlFor='lastname'>Last Name</FormLabel>\n                            <FormInput name='lastname' id='lastname' onChange={handleChange} required/>\n\n                            <FormLabel htmlFor='email'>Email</FormLabel>\n                            <FormInput name='email' id='email' onChange={handleChange} required/>\n\n                            <FormLabel htmlFor='password'>Password</FormLabel>\n                            <FormInput name='password' type='password' id='password' onChange={handleChange}\n                                       required/>\n\n                            {/*<FormLabel htmlFor='country'>Country</FormLabel>*/}\n                            {/*<FormSelect name='country' onChange={handleChange} required>*/}\n                            {/*    <option>Select Country</option>*/}\n                            {/*    {countries.all.map((country, key) => (*/}\n                            {/*        <option key={key} value={country.alpha2}>*/}\n                            {/*            {country.name}*/}\n                            {/*        </option>*/}\n                            {/*    ))}*/}\n                            {/*</FormSelect>*/}\n                            <FormButton onSubmit={handleSubmit}>Continue</FormButton>\n                            <Text><A to='/forgot'>Forgot password</A></Text>\n                    </form>\n                </div>\n            </Container>\n        </>\n    );\n}\n\nexport default SignUp;",{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","replacedBy":"291"},{"ruleId":"288","replacedBy":"292"},{"ruleId":"290","replacedBy":"293"},{"ruleId":"294","severity":1,"message":"295","line":32,"column":13,"nodeType":"296","messageId":"297","endLine":32,"endColumn":21},{"ruleId":"298","severity":1,"message":"299","line":127,"column":1,"nodeType":"300","messageId":"301","endLine":128,"endColumn":2},{"ruleId":"298","severity":1,"message":"299","line":129,"column":1,"nodeType":"300","messageId":"301","endLine":130,"endColumn":2},{"ruleId":"298","severity":1,"message":"299","line":131,"column":1,"nodeType":"300","messageId":"301","endLine":132,"endColumn":2},{"ruleId":"298","severity":1,"message":"299","line":133,"column":1,"nodeType":"300","messageId":"301","endLine":134,"endColumn":2},{"ruleId":"298","severity":1,"message":"299","line":135,"column":1,"nodeType":"300","messageId":"301","endLine":136,"endColumn":2},{"ruleId":"294","severity":1,"message":"302","line":14,"column":8,"nodeType":"296","messageId":"297","endLine":14,"endColumn":16},{"ruleId":"294","severity":1,"message":"303","line":171,"column":16,"nodeType":"296","messageId":"297","endLine":171,"endColumn":26},{"ruleId":"294","severity":1,"message":"304","line":171,"column":28,"nodeType":"296","messageId":"297","endLine":171,"endColumn":38},{"ruleId":"294","severity":1,"message":"305","line":4,"column":9,"nodeType":"296","messageId":"297","endLine":4,"endColumn":10},{"ruleId":"294","severity":1,"message":"302","line":14,"column":8,"nodeType":"296","messageId":"297","endLine":14,"endColumn":16},{"ruleId":"294","severity":1,"message":"303","line":171,"column":16,"nodeType":"296","messageId":"297","endLine":171,"endColumn":26},{"ruleId":"294","severity":1,"message":"304","line":171,"column":28,"nodeType":"296","messageId":"297","endLine":171,"endColumn":38},{"ruleId":"294","severity":1,"message":"295","line":32,"column":13,"nodeType":"296","messageId":"297","endLine":32,"endColumn":21},{"ruleId":"298","severity":1,"message":"299","line":127,"column":1,"nodeType":"300","messageId":"301","endLine":128,"endColumn":2},{"ruleId":"298","severity":1,"message":"299","line":129,"column":1,"nodeType":"300","messageId":"301","endLine":130,"endColumn":2},{"ruleId":"298","severity":1,"message":"299","line":131,"column":1,"nodeType":"300","messageId":"301","endLine":132,"endColumn":2},{"ruleId":"298","severity":1,"message":"299","line":133,"column":1,"nodeType":"300","messageId":"301","endLine":134,"endColumn":2},{"ruleId":"298","severity":1,"message":"299","line":135,"column":1,"nodeType":"300","messageId":"301","endLine":136,"endColumn":2},{"ruleId":"294","severity":1,"message":"305","line":4,"column":9,"nodeType":"296","messageId":"297","endLine":4,"endColumn":10},{"ruleId":"294","severity":1,"message":"306","line":12,"column":8,"nodeType":"296","messageId":"297","endLine":12,"endColumn":17},{"ruleId":"294","severity":1,"message":"307","line":13,"column":8,"nodeType":"296","messageId":"297","endLine":13,"endColumn":19},{"ruleId":"294","severity":1,"message":"308","line":6,"column":9,"nodeType":"296","messageId":"297","endLine":6,"endColumn":18},"no-native-reassign",["309"],"no-negated-in-lhs",["310"],["309"],["310"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'UserList' is defined but never used.","'newAccount' is assigned a value but never used.","'setAccount' is assigned a value but never used.","'A' is defined but never used.","'TextField' is defined but never used.","'FormControl' is defined but never used.","'countries' is defined but never used.","no-global-assign","no-unsafe-negation"]